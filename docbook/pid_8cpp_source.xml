<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pid_8cpp_source" xml:lang="zh">
<title>pid.cpp</title>
<indexterm><primary>HW-Components/algorithms/controller/src/pid.cpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="_pid_8cpp_source_1l00001"/>00001 
<anchor xml:id="_pid_8cpp_source_1l00002"/>00002 
<anchor xml:id="_pid_8cpp_source_1l00022"/>00022 <emphasis role="comment">/*&#32;Includes&#32;------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_pid_8hpp">pid.hpp</link>&quot;</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00024"/>00024 
<anchor xml:id="_pid_8cpp_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00026"/>00026 
<anchor xml:id="_pid_8cpp_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_base_8hpp">base.hpp</link>&quot;</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_tick_8hpp">tick.hpp</link>&quot;</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00029"/>00029 
<anchor xml:id="_pid_8cpp_source_1l00030"/>00030 <emphasis role="comment">/*&#32;Private&#32;macro&#32;-------------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00031"/>00031 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacehello__world">hello_world</link>
<anchor xml:id="_pid_8cpp_source_1l00032"/>00032 {
<anchor xml:id="_pid_8cpp_source_1l00033"/>00033 <emphasis role="keyword">namespace&#32;</emphasis>algorithms
<anchor xml:id="_pid_8cpp_source_1l00034"/>00034 {
<anchor xml:id="_pid_8cpp_source_1l00035"/>00035 <emphasis role="keyword">namespace&#32;</emphasis>controller
<anchor xml:id="_pid_8cpp_source_1l00036"/>00036 {
<anchor xml:id="_pid_8cpp_source_1l00037"/>00037 <emphasis role="keyword">namespace&#32;</emphasis>pid
<anchor xml:id="_pid_8cpp_source_1l00038"/>00038 {
<anchor xml:id="_pid_8cpp_source_1l00039"/>00039 
<anchor xml:id="_pid_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*&#32;Private&#32;constants&#32;---------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00041"/>00041 <emphasis role="comment">/*&#32;Private&#32;types&#32;-------------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00042"/>00042 <emphasis role="comment">/*&#32;Private&#32;variables&#32;---------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00043"/>00043 <emphasis role="comment">/*&#32;External&#32;variables&#32;--------------------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00044"/>00044 <emphasis role="comment">/*&#32;Private&#32;function&#32;prototypes&#32;-----------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00045"/>00045 
<anchor xml:id="_pid_8cpp_source_1l00056"/>00056 <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a54cdae6f66cea881673bd9e6b366324c">HandleAcross0</link>(<emphasis role="keywordtype">float</emphasis>&#32;ref,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fdb,&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a67467db7aaca33bbced40cf20bdfaafd">Arocss0Type</link>&#32;across0);
<anchor xml:id="_pid_8cpp_source_1l00057"/>00057 
<anchor xml:id="_pid_8cpp_source_1l00058"/>00058 <emphasis role="comment">/*&#32;Exported&#32;function&#32;definitions&#32;---------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00059"/>00059 
<anchor xml:id="_pid_8cpp_source_1l00060"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d">00060</link> <link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d">BasicPid::calc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ref_ls,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*fdb_ls,
<anchor xml:id="_pid_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ffd_ls,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*out_ls)
<anchor xml:id="_pid_8cpp_source_1l00062"/>00062 {
<anchor xml:id="_pid_8cpp_source_1l00063"/>00063 &#32;&#32;<emphasis role="comment">//&#32;记录上次PID控制器的输出</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00064"/>00064 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a11e584de3f2e46b2d1a9b015eca70028">last_ref</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1af99a094f13bcea8967752da1dddc9fde">ref</link>;
<anchor xml:id="_pid_8cpp_source_1l00065"/>00065 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a7a119b04e91e688df630fe378714542e">last_fdb</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a0f8f26c085953aa2099678faec2f2ea0">fdb</link>;
<anchor xml:id="_pid_8cpp_source_1l00066"/>00066 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1aec4c12de6df46bc71ff0f14b179c7c1e">last_out</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1ac100edeed6032af74d81fcfc932fccd2">out</link>;
<anchor xml:id="_pid_8cpp_source_1l00067"/>00067 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a874525371840e6a95751d99989559268">last_err</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>;
<anchor xml:id="_pid_8cpp_source_1l00068"/>00068 
<anchor xml:id="_pid_8cpp_source_1l00069"/>00069 &#32;&#32;<emphasis role="comment">//&#32;更新本次PID控制器的输入</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00070"/>00070 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ref&#32;=&#32;ref_ls&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;?&#32;ref_ls[0]&#32;:&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00071"/>00071 &#32;&#32;ref&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a54cdae6f66cea881673bd9e6b366324c">HandleAcross0</link>(ref,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a11e584de3f2e46b2d1a9b015eca70028">last_ref</link>,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1af62e93ac21f9e92f27ef150280a2ce13">across0</link>);
<anchor xml:id="_pid_8cpp_source_1l00072"/>00072 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1af99a094f13bcea8967752da1dddc9fde">ref</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a70ea00392a227dbb346be455b123efd3">setpointe_ramping</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_setpoint_ramping_1a7833313869bfc6845232378f32019e29">calc</link>(ref,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a11e584de3f2e46b2d1a9b015eca70028">last_ref</link>);
<anchor xml:id="_pid_8cpp_source_1l00073"/>00073 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a0f8f26c085953aa2099678faec2f2ea0">fdb</link>&#32;=&#32;fdb_ls&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;?&#32;fdb_ls[0]&#32;:&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00074"/>00074 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a1552dd518c6d3497273d238c7be2e025">ff</link>&#32;=&#32;ffd_ls&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>&#32;?&#32;ffd_ls[0]&#32;:&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00075"/>00075 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1af99a094f13bcea8967752da1dddc9fde">ref</link>&#32;-&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a0f8f26c085953aa2099678faec2f2ea0">fdb</link>;
<anchor xml:id="_pid_8cpp_source_1l00076"/>00076 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a26a25950b6b3c164140404ce5462bb81">dead_band</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_dead_band_1adff792034723f0cc61648e5c0696546c">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>);
<anchor xml:id="_pid_8cpp_source_1l00077"/>00077 
<anchor xml:id="_pid_8cpp_source_1l00078"/>00078 &#32;&#32;<emphasis role="comment">//&#32;获取时间间隔&#32;单位：秒</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00079"/>00079 &#32;&#32;<emphasis role="comment">//&#32;如果间隔超过阈值将重置节点</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00080"/>00080 &#32;&#32;uint32_t&#32;tick&#32;=&#32;<link linkend="_namespacehello__world_1_1dsp_1_1tick_1a97910b07255da1979f8ceafd8c6d2ea5">dsp::tick::GetTickMs</link>();
<anchor xml:id="_pid_8cpp_source_1l00081"/>00081 &#32;&#32;uint32_t&#32;interval&#32;=&#32;tick&#32;-&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a1d243a6d17ad5070a59d3f497af7f29a">last_tick</link>;
<anchor xml:id="_pid_8cpp_source_1l00082"/>00082 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interval&#32;&lt;=&#32;1)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;interval&#32;=&#32;1;
<anchor xml:id="_pid_8cpp_source_1l00084"/>00084 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00085"/>00085 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1aff64c84f92c7b638faedb46399c13ead">max_interval_ms</link>&#32;&amp;&amp;&#32;interval&#32;&gt;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1aff64c84f92c7b638faedb46399c13ead">max_interval_ms</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;interval&#32;=&#32;1;
<anchor xml:id="_pid_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a315027b98690d9d1000cd13afb9ab5fa">auto_reset</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ad74407cecfa9cfb473f199d142869f0f">reset</link>();
<anchor xml:id="_pid_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00090"/>00090 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00091"/>00091 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a75bdfa0d3a78a3c967a51944bdb8d69f">interval_s</link>&#32;=&#32;interval&#32;/&#32;1000.0f;
<anchor xml:id="_pid_8cpp_source_1l00092"/>00092 
<anchor xml:id="_pid_8cpp_source_1l00093"/>00093 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a1552dd518c6d3497273d238c7be2e025">ff</link>;
<anchor xml:id="_pid_8cpp_source_1l00094"/>00094 
<anchor xml:id="_pid_8cpp_source_1l00095"/>00095 &#32;&#32;<emphasis role="comment">//&#32;计算比例项</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00096"/>00096 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1aa30804746f9b0e52e5f8bd7cb5580d29">prop</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a53f2d1c0c504d9e588aaa81fb35aef3f">kp</link>&#32;*&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>;
<anchor xml:id="_pid_8cpp_source_1l00097"/>00097 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link>&#32;+=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1aa30804746f9b0e52e5f8bd7cb5580d29">prop</link>;
<anchor xml:id="_pid_8cpp_source_1l00098"/>00098 
<anchor xml:id="_pid_8cpp_source_1l00099"/>00099 &#32;&#32;<emphasis role="comment">//&#32;计算积分项</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1add7049534381e7311d599920e2327137">ki</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;inte_err&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a632be6ac5c03bb76b7ada8e139717985">inte_trapezoidal</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_trapezoidal_1a8efa8ae3581ad2dcae6cbb86c2848213">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a874525371840e6a95751d99989559268">last_err</link>);
<anchor xml:id="_pid_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;k_icr&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a912be6ad456f53dafa4d3c0675b79a93">inte_changing_rate</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_changing_rate_1a22842000f2832dba50540f0f6954244f">calc</link>(inte_err);
<anchor xml:id="_pid_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;k_is&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a966dc600bbe6bc806109b194e7fa0775">inte_separation</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_separation_1a882d032c53d0a62764140564737524ff">calc</link>(inte_err);
<anchor xml:id="_pid_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;k_iaw&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1ac0387bf7993c7517548a59f07b96406f">inte_anti_windup</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ae1314426af77e207b2a80bdd060b173f">calc</link>(inte_err,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a537bdfff77a85e4fc597bfd91766c543">inte</link>);
<anchor xml:id="_pid_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a537bdfff77a85e4fc597bfd91766c543">inte</link>&#32;+=
<anchor xml:id="_pid_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(k_icr&#32;*&#32;k_iaw)&#32;*&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1add7049534381e7311d599920e2327137">ki</link>&#32;*&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a75bdfa0d3a78a3c967a51944bdb8d69f">interval_s</link>)&#32;*&#32;inte_err;
<anchor xml:id="_pid_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link>&#32;+=&#32;k_is&#32;*&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a537bdfff77a85e4fc597bfd91766c543">inte</link>;
<anchor xml:id="_pid_8cpp_source_1l00108"/>00108 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a537bdfff77a85e4fc597bfd91766c543">inte</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00110"/>00110 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00111"/>00111 
<anchor xml:id="_pid_8cpp_source_1l00112"/>00112 &#32;&#32;<emphasis role="comment">//&#32;计算微分项</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a886fe384bcefc5273e5b48d8750c8bac">kd</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;diff&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a5c218122c4cb7e4e25b5d888795d1b18">diff_previous</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_diff_previous_1ac654422982d9475cf5c6f6c061cd2aeb">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a0f8f26c085953aa2099678faec2f2ea0">fdb</link>,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a7a119b04e91e688df630fe378714542e">last_fdb</link>,
<anchor xml:id="_pid_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a468de9314f05021de172c676c972a566">err</link>,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a874525371840e6a95751d99989559268">last_err</link>);
<anchor xml:id="_pid_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;diff&#32;*=&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1a886fe384bcefc5273e5b48d8750c8bac">kd</link>&#32;/&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a75bdfa0d3a78a3c967a51944bdb8d69f">interval_s</link>);
<anchor xml:id="_pid_8cpp_source_1l00117"/>00117 
<anchor xml:id="_pid_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a44e9bfe6db743074a5d71acef14f874c">diff</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1aa1fd5eea795d5cc28f2dd09965ab069e">diff_filter</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_diff_filter_1a7bb924886f04baa6e1b9db604529f93a">calc</link>(diff,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a44e9bfe6db743074a5d71acef14f874c">diff</link>);
<anchor xml:id="_pid_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link>&#32;+=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a44e9bfe6db743074a5d71acef14f874c">diff</link>;
<anchor xml:id="_pid_8cpp_source_1l00120"/>00120 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a44e9bfe6db743074a5d71acef14f874c">diff</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00122"/>00122 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00123"/>00123 
<anchor xml:id="_pid_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="comment">//&#32;传递输出</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00125"/>00125 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1ac100edeed6032af74d81fcfc932fccd2">out</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params_1aaad3f4ef38c31d3a683eff6c32ddd663">out_limit</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_out_limit_1a958ca6f80deb49af0d3c4d4bed32db42">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link>);
<anchor xml:id="_pid_8cpp_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out_ls&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;out_ls[0]&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1ac100edeed6032af74d81fcfc932fccd2">out</link>;
<anchor xml:id="_pid_8cpp_source_1l00128"/>00128 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00129"/>00129 &#32;&#32;<emphasis role="comment">//&#32;记录时间</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00130"/>00130 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link>.<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas_1a1d243a6d17ad5070a59d3f497af7f29a">last_tick</link>&#32;=&#32;tick;
<anchor xml:id="_pid_8cpp_source_1l00131"/>00131 
<anchor xml:id="_pid_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ref_ls&#32;&amp;&amp;&#32;fdb_ls&#32;&amp;&amp;&#32;ffd_ls&#32;&amp;&amp;&#32;out_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53">kStateOk</link>;
<anchor xml:id="_pid_8cpp_source_1l00134"/>00134 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00136"/>00136 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00137"/>00137 };
<anchor xml:id="_pid_8cpp_source_1l00138"/>00138 
<anchor xml:id="_pid_8cpp_source_1l00139"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">00139</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">PidList::push</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid">BasicPid</link>&#32;&amp;obj)&#32;{&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">push</link>(obj.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a7de4709eb73b91ffef6b5896dd45d8ed">params</link>());&#32;};
<anchor xml:id="_pid_8cpp_source_1l00140"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1adc2b7b05bea0ffea750ed9a212467145">00140</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">PidList::push</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">BasicPidParams</link>&#32;&amp;params)
<anchor xml:id="_pid_8cpp_source_1l00141"/>00141 {
<anchor xml:id="_pid_8cpp_source_1l00142"/>00142 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidNode</link>&#32;*node&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidNode</link>(params);
<anchor xml:id="_pid_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a2d94d2bc545bc8d673f4de9592d647c1">empty</link>())&#32;{&#32;&#32;<emphasis role="comment">//&#32;如果链表为空，头节点也是尾节点</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1af548c6769ca5c6239989fad85f203f6f">head_ptr_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>&#32;=&#32;node;
<anchor xml:id="_pid_8cpp_source_1l00145"/>00145 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>&#32;=&#32;node;
<anchor xml:id="_pid_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>&#32;=&#32;node;
<anchor xml:id="_pid_8cpp_source_1l00148"/>00148 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00149"/>00149 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1ab268cd237b3c6ad1b134d92d67b657d8">size_</link>++;
<anchor xml:id="_pid_8cpp_source_1l00150"/>00150 };
<anchor xml:id="_pid_8cpp_source_1l00151"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a5ea468d831da1cfd880ad38897d227d2">00151</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a5ea468d831da1cfd880ad38897d227d2">PidList::removeTail</link>()
<anchor xml:id="_pid_8cpp_source_1l00152"/>00152 {
<anchor xml:id="_pid_8cpp_source_1l00153"/>00153 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a2d94d2bc545bc8d673f4de9592d647c1">empty</link>())&#32;{
<anchor xml:id="_pid_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00155"/>00155 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>&#32;==&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1af548c6769ca5c6239989fad85f203f6f">head_ptr_</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1af548c6769ca5c6239989fad85f203f6f">head_ptr_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1ab268cd237b3c6ad1b134d92d67b657d8">size_</link>--;
<anchor xml:id="_pid_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00161"/>00161 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00162"/>00162 
<anchor xml:id="_pid_8cpp_source_1l00163"/>00163 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidNode</link>&#32;*rm_ptr_&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00164"/>00164 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidNode</link>&#32;*new_tail_ptr_&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1af548c6769ca5c6239989fad85f203f6f">head_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00165"/>00165 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(new_tail_ptr_-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>&#32;!=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;new_tail_ptr_&#32;=&#32;new_tail_ptr_-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00167"/>00167 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00168"/>00168 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>&#32;=&#32;new_tail_ptr_;
<anchor xml:id="_pid_8cpp_source_1l00169"/>00169 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a4e49baca02d46d036fafef6413fd5179">tail_ptr_</link>-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00170"/>00170 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;rm_ptr_;
<anchor xml:id="_pid_8cpp_source_1l00171"/>00171 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1ab268cd237b3c6ad1b134d92d67b657d8">size_</link>--;
<anchor xml:id="_pid_8cpp_source_1l00172"/>00172 &#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00173"/>00173 };
<anchor xml:id="_pid_8cpp_source_1l00174"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1acff9c6256713181463dac33bcc8930a5">00174</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1acff9c6256713181463dac33bcc8930a5">PidList::clear</link>()
<anchor xml:id="_pid_8cpp_source_1l00175"/>00175 {
<anchor xml:id="_pid_8cpp_source_1l00176"/>00176 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a2d94d2bc545bc8d673f4de9592d647c1">empty</link>())&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a5ea468d831da1cfd880ad38897d227d2">removeTail</link>();
<anchor xml:id="_pid_8cpp_source_1l00177"/>00177 };
<anchor xml:id="_pid_8cpp_source_1l00178"/>00178 
<anchor xml:id="_pid_8cpp_source_1l00179"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a8e4bfd26c1bb829f58d3fb14e80c4c0b">00179</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a8e4bfd26c1bb829f58d3fb14e80c4c0b">MultiNodesPid::MultiNodesPid</link>(<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1ae7056f306e67c77cdcc0145836828ea5">Type</link>&#32;type,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_out_limit">OutLimit</link>&#32;out_limit,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count)
<anchor xml:id="_pid_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;:&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link>(1,&#32;1,&#32;1,&#32;1),&#32;type_(type),&#32;out_limit_(out_limit)
<anchor xml:id="_pid_8cpp_source_1l00181"/>00181 {
<anchor xml:id="_pid_8cpp_source_1l00182"/>00182 &#32;&#32;count&#32;=&#32;count&#32;?&#32;count&#32;:&#32;1;
<anchor xml:id="_pid_8cpp_source_1l00183"/>00183 
<anchor xml:id="_pid_8cpp_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">push</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1aa1dffa33b44dd44a17cc074900d7e058">Params</link>());
<anchor xml:id="_pid_8cpp_source_1l00186"/>00186 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00187"/>00187 
<anchor xml:id="_pid_8cpp_source_1l00188"/>00188 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a18177bbaffdba8b34721e4c9256e6b8a">Controller::fdb_dim_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a11a15045ece7e7259a71143875b2aa32">size</link>();
<anchor xml:id="_pid_8cpp_source_1l00189"/>00189 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6e4f96a6abf9a261b9d5961b4352c78e">type_</link>&#32;==&#32;Type::kParallel)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1aaef37bc2917097e1f3956d3e376ea64c">Controller::ref_dim_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a18177bbaffdba8b34721e4c9256e6b8a">Controller::fdb_dim_</link>;
<anchor xml:id="_pid_8cpp_source_1l00191"/>00191 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00192"/>00192 };
<anchor xml:id="_pid_8cpp_source_1l00193"/>00193 
<anchor xml:id="_pid_8cpp_source_1l00194"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9a3282e6e51a5b7689717079f0d25abe">00194</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a8e4bfd26c1bb829f58d3fb14e80c4c0b">MultiNodesPid::MultiNodesPid</link>(<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1ae7056f306e67c77cdcc0145836828ea5">Type</link>&#32;type,&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_out_limit">OutLimit</link>&#32;out_limit,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count,
<anchor xml:id="_pid_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">Params</link>&#32;*params_arr)
<anchor xml:id="_pid_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;:&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link>(1,&#32;1,&#32;1,&#32;1),&#32;type_(type),&#32;out_limit_(out_limit)
<anchor xml:id="_pid_8cpp_source_1l00197"/>00197 {
<anchor xml:id="_pid_8cpp_source_1l00198"/>00198 &#32;&#32;count&#32;=&#32;count&#32;?&#32;count&#32;:&#32;1;
<anchor xml:id="_pid_8cpp_source_1l00199"/>00199 
<anchor xml:id="_pid_8cpp_source_1l00200"/>00200 &#32;&#32;<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">Params</link>&#32;default_params;
<anchor xml:id="_pid_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;use_default_params&#32;=&#32;params_arr&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;?&#32;true&#32;:&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">Params</link>&#32;*_params_ptr&#32;=
<anchor xml:id="_pid_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;use_default_params&#32;?&#32;&amp;params_arr[i]&#32;:&#32;&amp;default_params;
<anchor xml:id="_pid_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3b9df804e3d0bd9402c289727b00a25e">push</link>(*_params_ptr);
<anchor xml:id="_pid_8cpp_source_1l00206"/>00206 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00207"/>00207 
<anchor xml:id="_pid_8cpp_source_1l00208"/>00208 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a18177bbaffdba8b34721e4c9256e6b8a">Controller::fdb_dim_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a11a15045ece7e7259a71143875b2aa32">size</link>();
<anchor xml:id="_pid_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6e4f96a6abf9a261b9d5961b4352c78e">type_</link>&#32;==&#32;Type::kParallel)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1aaef37bc2917097e1f3956d3e376ea64c">Controller::ref_dim_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a18177bbaffdba8b34721e4c9256e6b8a">Controller::fdb_dim_</link>;
<anchor xml:id="_pid_8cpp_source_1l00211"/>00211 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00212"/>00212 };
<anchor xml:id="_pid_8cpp_source_1l00213"/>00213 
<anchor xml:id="_pid_8cpp_source_1l00214"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a5edb64efe535b8e5b8b1e30a91f28fe0">00214</link> <link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a5edb64efe535b8e5b8b1e30a91f28fe0">MultiNodesPid::reset</link>()
<anchor xml:id="_pid_8cpp_source_1l00215"/>00215 {
<anchor xml:id="_pid_8cpp_source_1l00216"/>00216 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidList::iterator</link>&#32;ptr&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3f374c443b6a07e0df4e800c253643c9">begin</link>();
<anchor xml:id="_pid_8cpp_source_1l00217"/>00217 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a11a15045ece7e7259a71143875b2aa32">size</link>()&#32;&amp;&amp;&#32;ptr&#32;!=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a25c937a246eff76147e6f2c0cf5a0d86">end</link>();
<anchor xml:id="_pid_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;i++,&#32;ptr&#32;=&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;链表遍历的双重保险</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1adb8ec7824738a35f300525749aa2f36e">obj_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ad74407cecfa9cfb473f199d142869f0f">reset</link>();
<anchor xml:id="_pid_8cpp_source_1l00221"/>00221 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00222"/>00222 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00223"/>00223 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53">kStateOk</link>;
<anchor xml:id="_pid_8cpp_source_1l00224"/>00224 };
<anchor xml:id="_pid_8cpp_source_1l00225"/>00225 
<anchor xml:id="_pid_8cpp_source_1l00226"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ae10478e0d731be3f6e6d0c479964d448">00226</link> <link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ae10478e0d731be3f6e6d0c479964d448">MultiNodesPid::calc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ref_ls,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*fdb_ls,
<anchor xml:id="_pid_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ffd_ls,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*out_ls)
<anchor xml:id="_pid_8cpp_source_1l00228"/>00228 {
<anchor xml:id="_pid_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6e4f96a6abf9a261b9d5961b4352c78e">type_</link>&#32;==&#32;Type::kCascade)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1accc1fd43233ab6d228f7111eab364c51">cascade_calc</link>(ref_ls,&#32;fdb_ls,&#32;ffd_ls,&#32;out_ls);
<anchor xml:id="_pid_8cpp_source_1l00231"/>00231 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6e4f96a6abf9a261b9d5961b4352c78e">type_</link>&#32;==&#32;Type::kParallel)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a180ce707d30cae5f45ec5820d1b2c50c">parallel_calc</link>(ref_ls,&#32;fdb_ls,&#32;ffd_ls,&#32;out_ls);
<anchor xml:id="_pid_8cpp_source_1l00233"/>00233 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00235"/>00235 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00236"/>00236 };
<anchor xml:id="_pid_8cpp_source_1l00237"/>00237 
<anchor xml:id="_pid_8cpp_source_1l00238"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a5798e287814521e3627db78943c840c4">00238</link> <link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">MultiNodesPid::Params</link>&#32;&amp;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a5798e287814521e3627db78943c840c4">MultiNodesPid::paramsAt</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;idx)
<anchor xml:id="_pid_8cpp_source_1l00239"/>00239 {
<anchor xml:id="_pid_8cpp_source_1l00240"/>00240 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidList::iterator</link>&#32;ptr&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3f374c443b6a07e0df4e800c253643c9">begin</link>();
<anchor xml:id="_pid_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;idx;&#32;i++)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>&#32;==&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a25c937a246eff76147e6f2c0cf5a0d86">end</link>())&#32;{
<anchor xml:id="_pid_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;ptr&#32;=&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00246"/>00246 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1adb8ec7824738a35f300525749aa2f36e">obj_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a7de4709eb73b91ffef6b5896dd45d8ed">params</link>();
<anchor xml:id="_pid_8cpp_source_1l00248"/>00248 };
<anchor xml:id="_pid_8cpp_source_1l00249"/>00249 
<anchor xml:id="_pid_8cpp_source_1l00250"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1accc1fd43233ab6d228f7111eab364c51">00250</link> <link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1accc1fd43233ab6d228f7111eab364c51">MultiNodesPid::cascade_calc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ref_ls,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*fdb_ls,
<anchor xml:id="_pid_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ffd_ls,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*out_ls)
<anchor xml:id="_pid_8cpp_source_1l00252"/>00252 {
<anchor xml:id="_pid_8cpp_source_1l00253"/>00253 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fdb_ls&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00256"/>00256 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00257"/>00257 &#32;&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53">kStateOk</link>;
<anchor xml:id="_pid_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ref&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ref_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;ref&#32;=&#32;ref_ls[0];
<anchor xml:id="_pid_8cpp_source_1l00261"/>00261 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00263"/>00263 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00264"/>00264 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ff&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ffd_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;ff&#32;=&#32;ffd_ls[0];
<anchor xml:id="_pid_8cpp_source_1l00267"/>00267 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00269"/>00269 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00270"/>00270 
<anchor xml:id="_pid_8cpp_source_1l00271"/>00271 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;zero_ffd&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*zero_ffd_ptr&#32;=&#32;&amp;zero_ffd;
<anchor xml:id="_pid_8cpp_source_1l00274"/>00274 
<anchor xml:id="_pid_8cpp_source_1l00275"/>00275 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidList::iterator</link>&#32;ptr&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3f374c443b6a07e0df4e800c253643c9">begin</link>();
<anchor xml:id="_pid_8cpp_source_1l00276"/>00276 &#32;&#32;uint32_t&#32;count&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a11a15045ece7e7259a71143875b2aa32">size</link>();
<anchor xml:id="_pid_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ptr&#32;==&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a25c937a246eff76147e6f2c0cf5a0d86">end</link>())&#32;{
<anchor xml:id="_pid_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1adb8ec7824738a35f300525749aa2f36e">obj_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d">calc</link>(&amp;ref,&#32;fdb_ls&#32;+&#32;i,&#32;zero_ffd_ptr,&#32;&amp;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>);
<anchor xml:id="_pid_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;ref&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>;
<anchor xml:id="_pid_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;ptr&#32;=&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00284"/>00284 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00285"/>00285 
<anchor xml:id="_pid_8cpp_source_1l00286"/>00286 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6ba0574fd4cea5a7babe59f5fb9c1d08">out_limit_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_out_limit_1a958ca6f80deb49af0d3c4d4bed32db42">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>&#32;+&#32;ff);
<anchor xml:id="_pid_8cpp_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;out_ls[0]&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>;
<anchor xml:id="_pid_8cpp_source_1l00289"/>00289 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00291"/>00291 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00292"/>00292 
<anchor xml:id="_pid_8cpp_source_1l00293"/>00293 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;calc_state;
<anchor xml:id="_pid_8cpp_source_1l00294"/>00294 };
<anchor xml:id="_pid_8cpp_source_1l00295"/>00295 
<anchor xml:id="_pid_8cpp_source_1l00296"/><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a180ce707d30cae5f45ec5820d1b2c50c">00296</link> <link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a180ce707d30cae5f45ec5820d1b2c50c">MultiNodesPid::parallel_calc</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ref_ls,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*fdb_ls,
<anchor xml:id="_pid_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*ffd_ls,&#32;<emphasis role="keywordtype">float</emphasis>&#32;*out_ls)
<anchor xml:id="_pid_8cpp_source_1l00298"/>00298 {
<anchor xml:id="_pid_8cpp_source_1l00299"/>00299 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ref_ls&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;||&#32;fdb_ls&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00302"/>00302 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00303"/>00303 &#32;&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link>&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53">kStateOk</link>;
<anchor xml:id="_pid_8cpp_source_1l00304"/>00304 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ff&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00305"/>00305 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ffd_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;ff&#32;=&#32;ffd_ls[0];
<anchor xml:id="_pid_8cpp_source_1l00307"/>00307 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00309"/>00309 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00310"/>00310 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;zero_ffd&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00311"/>00311 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;*zero_ffd_ptr&#32;=&#32;&amp;zero_ffd;
<anchor xml:id="_pid_8cpp_source_1l00312"/>00312 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00313"/>00313 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;node_out&#32;=&#32;0;
<anchor xml:id="_pid_8cpp_source_1l00314"/>00314 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node">PidNode</link>&#32;*ptr&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a3f374c443b6a07e0df4e800c253643c9">begin</link>();
<anchor xml:id="_pid_8cpp_source_1l00315"/>00315 &#32;&#32;uint32_t&#32;count&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a11a15045ece7e7259a71143875b2aa32">size</link>();
<anchor xml:id="_pid_8cpp_source_1l00316"/>00316 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ptr&#32;==&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1ab06cc5de8b8e69bd63c1c19317afdede">pid_list_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_list_1a25c937a246eff76147e6f2c0cf5a0d86">end</link>())&#32;{
<anchor xml:id="_pid_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_pid_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1adb8ec7824738a35f300525749aa2f36e">obj_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d">calc</link>(ref_ls&#32;+&#32;i,&#32;fdb_ls&#32;+&#32;i,&#32;zero_ffd_ptr,&#32;&amp;node_out);
<anchor xml:id="_pid_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>&#32;+=&#32;node_out;
<anchor xml:id="_pid_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;ptr&#32;=&#32;ptr-&gt;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_pid_node_1a7be6366e2fa1a9d1b8a84ca9101e668f">next_ptr_</link>;
<anchor xml:id="_pid_8cpp_source_1l00323"/>00323 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00324"/>00324 &#32;&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a6ba0574fd4cea5a7babe59f5fb9c1d08">out_limit_</link>.<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_out_limit_1a958ca6f80deb49af0d3c4d4bed32db42">calc</link>(<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a9124ff9fabf43c21a73a294148697976">out</link>&#32;+&#32;ff);
<anchor xml:id="_pid_8cpp_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(out_ls)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;out_ls[0]&#32;=&#32;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_multi_nodes_pid_1a46bcce0ae0037c45b1e5f2c88a957498">out_</link>;
<anchor xml:id="_pid_8cpp_source_1l00327"/>00327 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;calc_state&#32;=&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9">kStateError</link>;
<anchor xml:id="_pid_8cpp_source_1l00329"/>00329 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00330"/>00330 
<anchor xml:id="_pid_8cpp_source_1l00331"/>00331 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;calc_state;
<anchor xml:id="_pid_8cpp_source_1l00332"/>00332 };
<anchor xml:id="_pid_8cpp_source_1l00333"/>00333 
<anchor xml:id="_pid_8cpp_source_1l00334"/>00334 <emphasis role="comment">/*&#32;Private&#32;function&#32;definitions&#32;----------------------------------------------*/</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00335"/>00335 
<anchor xml:id="_pid_8cpp_source_1l00336"/><link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a54cdae6f66cea881673bd9e6b366324c">00336</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a54cdae6f66cea881673bd9e6b366324c">HandleAcross0</link>(<emphasis role="keywordtype">float</emphasis>&#32;ref,&#32;<emphasis role="keywordtype">float</emphasis>&#32;fdb,&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a67467db7aaca33bbced40cf20bdfaafd">Arocss0Type</link>&#32;across0)
<anchor xml:id="_pid_8cpp_source_1l00337"/>00337 {
<anchor xml:id="_pid_8cpp_source_1l00338"/>00338 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(across0&#32;==&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a67467db7aaca33bbced40cf20bdfaafdaca69f1b608769b74fb2fa511c72e449e">kArocss0Rad</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1a7640febc082ad62910c63a8feac1c002">HandleAngleCross0Rad</link>(ref,&#32;fdb);
<anchor xml:id="_pid_8cpp_source_1l00340"/>00340 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(across0&#32;==&#32;<link linkend="_namespacehello__world_1_1algorithms_1_1controller_1_1pid_1a67467db7aaca33bbced40cf20bdfaafdad112435b8a0aad3baa195abc10a81c87">kArocss0Deg</link>)&#32;{
<anchor xml:id="_pid_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacehello__world_1a7c9ce795c80c4bc674e5470984f99105">HandleAngleCross0Deg</link>(ref,&#32;fdb);
<anchor xml:id="_pid_8cpp_source_1l00342"/>00342 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pid_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ref;
<anchor xml:id="_pid_8cpp_source_1l00344"/>00344 &#32;&#32;}
<anchor xml:id="_pid_8cpp_source_1l00345"/>00345 };
<anchor xml:id="_pid_8cpp_source_1l00346"/>00346 
<anchor xml:id="_pid_8cpp_source_1l00347"/>00347 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;pid</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00348"/>00348 
<anchor xml:id="_pid_8cpp_source_1l00349"/>00349 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;controller</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00350"/>00350 
<anchor xml:id="_pid_8cpp_source_1l00351"/>00351 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;algorithms</emphasis>
<anchor xml:id="_pid_8cpp_source_1l00352"/>00352 
<anchor xml:id="_pid_8cpp_source_1l00353"/>00353 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;hello_world</emphasis>
</programlisting></section>
