<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid" xml:lang="zh">
<title>hello_world::algorithms::controller::pid::BasicPid类 参考</title>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary></indexterm>
<para>

<para>基础 PID 控制器类，继承自Controller类 </para>
 
</para>
<para>
<computeroutput>#include &lt;pid.hpp&gt;</computeroutput>
</para>
类 hello_world::algorithms::controller::pid::BasicPid 继承关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
hello_world::algorithms::controller::pid::BasicPid 的协作图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public 类型    </title>
        <itemizedlist>
            <listitem><para>typedef <link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">BasicPidParams</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas">BasicPidDatas</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">Datas</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public 成员函数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa90f1177b491e92d92c8fea39f6a7e0f">BasicPid</link> ()</para>

<para>默认构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类 </para>
</listitem>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a15d1af5a15fc36573fa8d6e9103f342d">BasicPid</link> (const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp;<link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a7de4709eb73b91ffef6b5896dd45d8ed">params</link>)</para>

<para>构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类并设置 PID 参数 </para>
</listitem>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a1b70f32c6a0140eed7c4c76597689b66">BasicPid</link> (float kp, float ki, float kd)</para>

<para>构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类并设置 PID 参数 </para>
</listitem>
            <listitem><para>float <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441">out</link> () const</para>

<para>获取 PID 控制器的输出 </para>
</listitem>
            <listitem><para><link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ad74407cecfa9cfb473f199d142869f0f">reset</link> () override</para>

<para>重置PID数据 </para>
</listitem>
            <listitem><para><link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d">calc</link> (const float *ref_ls, const float *fdb_ls, const float *ffd_ls, float *out_ls) override</para>

<para>PID 控制器的计算函数 </para>
</listitem>
            <listitem><para>const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp; <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a7de4709eb73b91ffef6b5896dd45d8ed">params</link> () const</para>

<para>获取 PID 参数的常量引用 </para>
</listitem>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp; <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a567e0102acf3f5d89ad27ecf070d0c3c">params</link> ()</para>

<para>获取 PID 参数的引用，用于修改参数，修改方法参见 <computeroutput><link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">BasicPidParams</link></computeroutput> </para>
</listitem>
            <listitem><para>const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">Datas</link> &amp; <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aeb34efee95fd20bd0f97f4281a820cbf">datas</link> () const</para>

<para>获取 PID 数据的常量引用 </para>
</listitem>
        </itemizedlist>
</simplesect>
Public 成员函数 继承自 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">hello_world::algorithms::controller::Controller</link>        <itemizedlist>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a3fe01fdfc6fc3c17754757d7d0c4cfe9">Controller</link> (size_t ref_dim, size_t fdb_dim, size_t out_dim, size_t ffd_dim=0)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a392091ff03b5346cbbc3ffe14d4a6d83">~Controller</link> ()</para>
</listitem>
            <listitem><para>void * <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a5c856e2e4d553904a73fa8bf2b1d10f0">operator new</link> (size_t size)</para>
</listitem>
            <listitem><para>void * <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a097b88e2a82574df8d5a26eeee442525">operator new[]</link> (size_t size)</para>
</listitem>
            <listitem><para>void <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1aee97fc5e8af6420ec56ee5ed7fb1f3da">operator delete</link> (void *ptr)</para>
</listitem>
            <listitem><para>void <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1ad3d671169876c515fc7bf1c3be5f3b23">operator delete[]</link> (void *ptr)</para>
</listitem>
        </itemizedlist>
Public 成员函数 继承自 <link linkend="_classhello__world_1_1_mem_mang">hello_world::MemMang</link>        <itemizedlist>
            <listitem><para>void * <link linkend="_classhello__world_1_1_mem_mang_1abcf6e7289814e8da342ba4f47d8af411">operator new</link> (size_t size)</para>
</listitem>
            <listitem><para>void * <link linkend="_classhello__world_1_1_mem_mang_1ad10b6eff1541322708e5bde32c590c82">operator new[]</link> (size_t size)</para>
</listitem>
            <listitem><para>void <link linkend="_classhello__world_1_1_mem_mang_1abf1fe21066f52d693e2eec63a5833e8e">operator delete</link> (void *ptr)</para>
</listitem>
            <listitem><para>void <link linkend="_classhello__world_1_1_mem_mang_1a54e1a6a8e01b0996cc2854a8bc1ce7bd">operator delete[]</link> (void *ptr)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Private 属性    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d">params_</link></para>

<para>参数 </para>
</listitem>
            <listitem><para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">Datas</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34">datas_</link></para>

<para>数据 </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>额外继承的成员函数    </title>
Protected 属性 继承自 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">hello_world::algorithms::controller::Controller</link>        <itemizedlist>
            <listitem><para>size_t <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1aaef37bc2917097e1f3956d3e376ea64c">ref_dim_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a18177bbaffdba8b34721e4c9256e6b8a">fdb_dim_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a174ff1eec5dbf10f728c086b53504a6f">ffd_dim_</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1aac07a607fecba8eca0a3819ba86d40e2">out_dim_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>详细描述</title>

<para>基础 PID 控制器类，继承自Controller类 </para>



<para><formalpara><title>参见</title>

<para><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> </para>
</formalpara>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00118">118</link> 行定义.</para>
</section>
<section>
<title>成员类型定义说明</title>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425"/><section>
    <title>Datas</title>
<indexterm><primary>Datas</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>Datas</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_datas">BasicPidDatas</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">hello_world::algorithms::controller::pid::BasicPid::Datas</link></computeroutput></para><para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00122">122</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9"/><section>
    <title>Params</title>
<indexterm><primary>Params</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>Params</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">BasicPidParams</link> <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">hello_world::algorithms::controller::pid::BasicPid::Params</link></computeroutput></para><para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00121">121</link> 行定义.</para>
</section>
</section>
<section>
<title>构造及析构函数说明</title>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa90f1177b491e92d92c8fea39f6a7e0f"/><section>
    <title>BasicPid()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>BasicPid</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>BasicPid</secondary></indexterm>
<para><computeroutput>hello_world::algorithms::controller::pid::BasicPid::BasicPid ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>默认构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类 </para>
</para>

<para>参考值维数、反馈值维数、前馈值维数和输出值维数均为 1。 </para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00128">128</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a15d1af5a15fc36573fa8d6e9103f342d"/><section>
    <title>BasicPid()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>BasicPid</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>BasicPid</secondary></indexterm>
<para><computeroutput>hello_world::algorithms::controller::pid::BasicPid::BasicPid (const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp; params)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类并设置 PID 参数 </para>
</para>

<para>
                <formalpara>
                    <title>
参数</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>params</entry><entry>
<para>PID 参数 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00134">134</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a1b70f32c6a0140eed7c4c76597689b66"/><section>
    <title>BasicPid()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>BasicPid</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>BasicPid</secondary></indexterm>
<para><computeroutput>hello_world::algorithms::controller::pid::BasicPid::BasicPid (float kp, float ki, float kd)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>构造函数，初始化 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller">Controller</link> 基类并设置 PID 参数 </para>
</para>

<para>
                <formalpara>
                    <title>
参数</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>kp</entry><entry>
<para>比例系数 </para>
</entry>
                            </row>
                            <row>
<entry>ki</entry><entry>
<para>积分系数 </para>
</entry>
                            </row>
                            <row>
<entry>kd</entry><entry>
<para>微分系数 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00142">142</link> 行定义.</para>
</section>
</section>
<section>
<title>成员函数说明</title>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d"/><section>
    <title>calc()</title>
<indexterm><primary>calc</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>calc</secondary></indexterm>
<para><computeroutput><link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link> hello_world::algorithms::controller::pid::BasicPid::calc (const float * ref_ls, const float * fdb_ls, const float * ffd_ls, float * out_ls)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>PID 控制器的计算函数 </para>
</para>

<para>
                <formalpara>
                    <title>
参数</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ref_ls</entry><entry>
<para>参考值列表，只使用第一个值，如果为nullptr则使用 0 </para>
</entry>
                            </row>
                            <row>
<entry>fdb_ls</entry><entry>
<para>反馈值列表，只使用第一个值，如果为nullptr则使用 0 </para>
</entry>
                            </row>
                            <row>
<entry>ffd_ls</entry><entry>
<para>前馈值列表，只使用第一个值，如果为nullptr则使用 0 </para>
</entry>
                            </row>
                            <row>
<entry>out_ls</entry><entry>
<para>输出值列表，只使用第一个值，为 <computeroutput>nullptr</computeroutput> 时，输出传递失败 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>返回</title>

<para>表示计算过程是否正常的状态值 </para>
</formalpara>

                <formalpara>
                    <title>
返回值</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>kStateOk</entry><entry>
<para>计算成功且所有参数均不为nullptr </para>
</entry>
                            </row>
                            <row>
<entry>kStateError</entry><entry>
<para>有参数为 nullptr，为了计算成功会使用默认值 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <caution><title>注意</title>

<para>- 当 <computeroutput>ref_ls</computeroutput> 为 <computeroutput>nullptr</computeroutput> 时，使用 0 作为参考值 </para>

<para>- 当 <computeroutput>fdb_ls</computeroutput> 为 <computeroutput>nullptr</computeroutput> 时，使用 0 作为反馈值 </para>

<para>- 当 <computeroutput>ffd_ls</computeroutput> 为 <computeroutput>nullptr</computeroutput> 时，使用 0 作为前馈值 </para>

<para>- 当 <computeroutput>out_ls</computeroutput> 为 <computeroutput>nullptr</computeroutput> 时，输出传递失败 </para>
</caution>
</para>
<para>
实现了 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a3a59379f79586c7d89f92b3b5f08bb57">hello_world::algorithms::controller::Controller</link>.</para>
<para>
在文件 <link linkend="_pid_8cpp_source">pid.cpp</link> 第 <link linkend="_pid_8cpp_source_1l00060">60</link> 行定义.</para>
函数调用图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_a2b8667e517f1999ec3fecffe9e6bd33d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
这是这个函数的调用关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_a2b8667e517f1999ec3fecffe9e6bd33d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aeb34efee95fd20bd0f97f4281a820cbf"/><section>
    <title>datas()</title>
<indexterm><primary>datas</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>datas</secondary></indexterm>
<para><computeroutput>const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">Datas</link> &amp; hello_world::algorithms::controller::pid::BasicPid::datas ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>获取 PID 数据的常量引用 </para>
</para>

<para><formalpara><title>返回</title>

<para>PID 数据的常量引用 </para>
</formalpara>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00199">199</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a0dabd4a10fd3786e05c0fc5fa7bc9441"/><section>
    <title>out()</title>
<indexterm><primary>out</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>out</secondary></indexterm>
<para><computeroutput>float hello_world::algorithms::controller::pid::BasicPid::out ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>获取 PID 控制器的输出 </para>
</para>

<para><formalpara><title>返回</title>

<para>PID 控制器的输出 </para>
</formalpara>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00154">154</link> 行定义.</para>
这是这个函数的调用关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_a0dabd4a10fd3786e05c0fc5fa7bc9441_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a567e0102acf3f5d89ad27ecf070d0c3c"/><section>
    <title>params()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>params</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>params</secondary></indexterm>
<para><computeroutput><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp; hello_world::algorithms::controller::pid::BasicPid::params ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>获取 PID 参数的引用，用于修改参数，修改方法参见 <computeroutput><link linkend="_structhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_params">BasicPidParams</link></computeroutput> </para>
</para>

<para><formalpara><title>返回</title>

<para>PID 参数的引用 </para>
</formalpara>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00193">193</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a7de4709eb73b91ffef6b5896dd45d8ed"/><section>
    <title>params()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>params</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>params</secondary></indexterm>
<para><computeroutput>const <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> &amp; hello_world::algorithms::controller::pid::BasicPid::params ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>获取 PID 参数的常量引用 </para>
</para>

<para><formalpara><title>返回</title>

<para>PID 参数的常量引用 </para>
</formalpara>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00187">187</link> 行定义.</para>
这是这个函数的调用关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_a7de4709eb73b91ffef6b5896dd45d8ed_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ad74407cecfa9cfb473f199d142869f0f"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>reset</secondary></indexterm>
<para><computeroutput><link linkend="_namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d">State</link> hello_world::algorithms::controller::pid::BasicPid::reset ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>重置PID数据 </para>
</para>

<para><formalpara><title>返回</title>

<para>始终返回 kStateOk </para>
</formalpara>
</para>
<para>
实现了 <link linkend="_classhello__world_1_1algorithms_1_1controller_1_1_controller_1a1dfc2817c2e54de404466124a6ca4d19">hello_world::algorithms::controller::Controller</link>.</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00160">160</link> 行定义.</para>
这是这个函数的调用关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_ad74407cecfa9cfb473f199d142869f0f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>类成员变量说明</title>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aa9dc0fec4b42962ccfb6e054ee6eec34"/><section>
    <title>datas_</title>
<indexterm><primary>datas_</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>datas_</secondary></indexterm>
<para><computeroutput><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1ac746d1ea342076cd716cf67b1efda425">Datas</link> hello_world::algorithms::controller::pid::BasicPid::datas_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>数据 </para>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00203">203</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a23d79888d52e81b1e55296c9c9a6744d"/><section>
    <title>params_</title>
<indexterm><primary>params_</primary><secondary>hello_world::algorithms::controller::pid::BasicPid</secondary></indexterm>
<indexterm><primary>hello_world::algorithms::controller::pid::BasicPid</primary><secondary>params_</secondary></indexterm>
<para><computeroutput><link linkend="_classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1aceb8c1948ba278fd2292ea1b1d7c56f9">Params</link> hello_world::algorithms::controller::pid::BasicPid::params_<computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>参数 </para>
</para>
<para>
在文件 <link linkend="_pid_8hpp_source">pid.hpp</link> 第 <link linkend="_pid_8hpp_source_1l00202">202</link> 行定义.</para>
</section>
</section>
</section>
