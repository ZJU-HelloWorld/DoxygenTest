<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classhello__world_1_1devices_1_1referee_1_1_rx_package" xml:lang="zh">
<title>hello_world::devices::referee::RxPackage&lt; T &gt; 模板类 参考</title>
<indexterm><primary>hello_world::devices::referee::RxPackage&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;referee_rx_template.hpp&gt;</computeroutput>
</para>
类 hello_world::devices::referee::RxPackage&lt; T &gt; 继承关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1devices_1_1referee_1_1_rx_package__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
hello_world::devices::referee::RxPackage&lt; T &gt; 的协作图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1devices_1_1referee_1_1_rx_package__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public 成员函数    </title>
        <itemizedlist>
            <listitem><para>const T &amp; <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1aa26ecd414bcce3624fd4ee43555e06ed">data</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a2f6e09b96618c66f057d7717195e483f">RxPackage</link> (const <link linkend="_namespacehello__world_1_1devices_1_1referee_1a51755bb88aea2d560575188f43afc38a">FrameCmdId</link> command_id, const uint32_t frequence)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public 成员函数 继承自 <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info">hello_world::devices::referee::RxPackageInfo</link>        <itemizedlist>
            <listitem><para><link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a425addbe56cad6a94fc00d5a4beae287">RxPackageInfo</link> (const <link linkend="_namespacehello__world_1_1devices_1_1referee_1a51755bb88aea2d560575188f43afc38a">FrameCmdId</link> command_id, const uint32_t frequence)</para>
</listitem>
            <listitem><para>void <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a2767a90b294aac66ab8268a40f89070e">setHandled</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a4d47f980c5f11bbe7bc5bf5d3cd448a4">isUpdated</link> () const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Private 成员函数    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a69171902885fbe16d886685130c0b9fb">decode</link> (const uint8_t *frame_cmd_data_ptr)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private 属性    </title>
        <itemizedlist>
            <listitem><para>T <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a1b773247599e0da8f8e3b2276ad43ce9">data_</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>额外继承的成员函数    </title>
Protected 属性 继承自 <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info">hello_world::devices::referee::RxPackageInfo</link>        <itemizedlist>
            <listitem><para>bool <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a652358f4036b06f1131520b6b6e8fc2a">is_handled_</link> = false</para>
</listitem>
            <listitem><para><link linkend="_namespacehello__world_1_1devices_1_1referee_1a51755bb88aea2d560575188f43afc38a">FrameCmdId</link> <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a75f5994431c01325057a21f5de7394a6">command_id_</link> = <link linkend="_namespacehello__world_1_1devices_1_1referee_1a51755bb88aea2d560575188f43afc38aa386d9b809aca2e4adb719dc9b59889ce">kFrameCmdIdNone</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1a35731243c59c43b397c3b426abd0a631">update_interval_</link> = 1000u</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1ae30c9a631d1bd61d4599d68b54cbfa8b">last_update_tick_</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>详细描述</title>
<simplesect><title>template&lt;typename T&gt;<?linebreak?>class hello_world::devices::referee::RxPackage&lt; T &gt;</title></simplesect>
<para>
在文件 <link linkend="_referee__rx__template_8hpp_source">referee_rx_template.hpp</link> 第 <link linkend="_referee__rx__template_8hpp_source_1l00081">81</link> 行定义.</para>
</section>
<section>
<title>构造及析构函数说明</title>
<anchor xml:id="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a2f6e09b96618c66f057d7717195e483f"/><section>
    <title>RxPackage()</title>
<indexterm><primary>RxPackage</primary><secondary>hello_world::devices::referee::RxPackage&lt; T &gt;</secondary></indexterm>
<indexterm><primary>hello_world::devices::referee::RxPackage&lt; T &gt;</primary><secondary>RxPackage</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package">hello_world::devices::referee::RxPackage</link>&lt; T &gt;::RxPackage (const <link linkend="_namespacehello__world_1_1devices_1_1referee_1a51755bb88aea2d560575188f43afc38a">FrameCmdId</link> command_id, const uint32_t frequence)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
在文件 <link linkend="_referee__rx__template_8hpp_source">referee_rx_template.hpp</link> 第 <link linkend="_referee__rx__template_8hpp_source_1l00091">91</link> 行定义.</para>
</section>
</section>
<section>
<title>成员函数说明</title>
<anchor xml:id="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1aa26ecd414bcce3624fd4ee43555e06ed"/><section>
    <title>data()</title>
<indexterm><primary>data</primary><secondary>hello_world::devices::referee::RxPackage&lt; T &gt;</secondary></indexterm>
<indexterm><primary>hello_world::devices::referee::RxPackage&lt; T &gt;</primary><secondary>data</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package">hello_world::devices::referee::RxPackage</link>&lt; T &gt;::data ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
在文件 <link linkend="_referee__rx__template_8hpp_source">referee_rx_template.hpp</link> 第 <link linkend="_referee__rx__template_8hpp_source_1l00087">87</link> 行定义.</para>
</section>
<anchor xml:id="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a69171902885fbe16d886685130c0b9fb"/><section>
    <title>decode()</title>
<indexterm><primary>decode</primary><secondary>hello_world::devices::referee::RxPackage&lt; T &gt;</secondary></indexterm>
<indexterm><primary>hello_world::devices::referee::RxPackage&lt; T &gt;</primary><secondary>decode</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package">hello_world::devices::referee::RxPackage</link>&lt; T &gt;::decode (const uint8_t * frame_cmd_data_ptr)<computeroutput>[private]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
实现了 <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_info_1acb3daf6092bba76a10fa7cc2d580a429">hello_world::devices::referee::RxPackageInfo</link>.</para>
<para>
被 <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package_inter_radar_warning_1ab36c0be84c4a8b518e7141d77401c425">hello_world::devices::referee::RxPackageInterRadarWarning</link> 重载.</para>
<para>
在文件 <link linkend="_referee__rx__template_8hpp_source">referee_rx_template.hpp</link> 第 <link linkend="_referee__rx__template_8hpp_source_1l00095">95</link> 行定义.</para>
函数调用图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classhello__world_1_1devices_1_1referee_1_1_rx_package_a69171902885fbe16d886685130c0b9fb_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>类成员变量说明</title>
<anchor xml:id="_classhello__world_1_1devices_1_1referee_1_1_rx_package_1a1b773247599e0da8f8e3b2276ad43ce9"/><section>
    <title>data_</title>
<indexterm><primary>data_</primary><secondary>hello_world::devices::referee::RxPackage&lt; T &gt;</secondary></indexterm>
<indexterm><primary>hello_world::devices::referee::RxPackage&lt; T &gt;</primary><secondary>data_</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_classhello__world_1_1devices_1_1referee_1_1_rx_package">hello_world::devices::referee::RxPackage</link>&lt; T &gt;::data_<computeroutput>[private]</computeroutput></computeroutput></para><para>
在文件 <link linkend="_referee__rx__template_8hpp_source">referee_rx_template.hpp</link> 第 <link linkend="_referee__rx__template_8hpp_source_1l00084">84</link> 行定义.</para>
</section>
</section>
</section>
