<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="zh">
  <compounddef id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup" kind="class" language="C++" prot="public">
    <compoundname>hello_world::algorithms::controller::pid::InteAntiWindup</compoundname>
    <includes refid="pid__opt_8hpp" local="no">pid_opt.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a50a25dea16fff05f0d7f03cb02b2990b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hello_world::algorithms::controller::pid::InteAntiWindup::is_enabled_</definition>
        <argsstring></argsstring>
        <name>is_enabled_</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::is_enabled_</qualifiedname>
        <briefdescription>
<para>是否启用积分抗饱和优化 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="251" column="8" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a0db915fe3d477396d68fb0462fcf3a28" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float hello_world::algorithms::controller::pid::InteAntiWindup::lower_</definition>
        <argsstring></argsstring>
        <name>lower_</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::lower_</qualifiedname>
        <briefdescription>
<para>触发积分抗饱和的积分输出值下限 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="252" column="9" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a15f1c738125bfca7994e2c9b304b61e8" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float hello_world::algorithms::controller::pid::InteAntiWindup::upper_</definition>
        <argsstring></argsstring>
        <name>upper_</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::upper_</qualifiedname>
        <briefdescription>
<para>触发积分抗饱和的积分输出值上限 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="253" column="9" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a8eb55119483f5d49173d2c77cdb9a556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hello_world::algorithms::controller::pid::InteAntiWindup::InteAntiWindup</definition>
        <argsstring>(bool is_enabled=true, float lower=-0.01, float upper=0.01)</argsstring>
        <name>InteAntiWindup</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::InteAntiWindup</qualifiedname>
        <param>
          <type>bool</type>
          <declname>is_enabled</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>float</type>
          <declname>lower</declname>
          <defval>-0.01</defval>
        </param>
        <param>
          <type>float</type>
          <declname>upper</declname>
          <defval>0.01</defval>
        </param>
        <briefdescription>
<para>构造函数，初始化积分抗饱和优化参数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>是否启用积分抗饱和优化，默认为true </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lower</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值下限，默认值为-0.01 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值上限，默认值为0.01 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="150" column="3" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a926793e090a2c5c64c308216c3e6dc78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d" kindref="member">State</ref></type>
        <definition>State hello_world::algorithms::controller::pid::InteAntiWindup::setEnabled</definition>
        <argsstring>(bool is_enabled)</argsstring>
        <name>setEnabled</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::setEnabled</qualifiedname>
        <param>
          <type>bool</type>
          <declname>is_enabled</declname>
        </param>
        <briefdescription>
<para>设置是否启用积分抗饱和优化 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>是否启用积分抗饱和优化 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>设置状态，始终返回kStateOk </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>kStateOk</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="162" column="16" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="162" bodyend="166"/>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53" compoundref="controller__base_8hpp" startline="33">hello_world::algorithms::controller::kStateOk</references>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ab1a3b82928ba4589ae7db1b9fe40cbd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d" kindref="member">State</ref></type>
        <definition>State hello_world::algorithms::controller::pid::InteAntiWindup::setLower</definition>
        <argsstring>(float lower)</argsstring>
        <name>setLower</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::setLower</qualifiedname>
        <param>
          <type>float</type>
          <declname>lower</declname>
        </param>
        <briefdescription>
<para>设置触发积分抗饱和的积分输出值下限 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lower</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值下限 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>设置状态，如果参数合法返回kStateOk，否则在处理非法参数后返回kStateError </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>kStateOK</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功且参数合法 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kStateError</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功但参数非法 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="175" column="16" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="175" bodyend="179"/>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9" compoundref="controller__base_8hpp" startline="34">hello_world::algorithms::controller::kStateError</references>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53" compoundref="controller__base_8hpp" startline="33">hello_world::algorithms::controller::kStateOk</references>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a99aa5b1cebc90714af693d7e8d816ffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d" kindref="member">State</ref></type>
        <definition>State hello_world::algorithms::controller::pid::InteAntiWindup::setUpper</definition>
        <argsstring>(float upper)</argsstring>
        <name>setUpper</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::setUpper</qualifiedname>
        <param>
          <type>float</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
<para>设置触发积分抗饱和的积分输出值上限 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>upper</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值上限 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>设置状态，如果参数合法返回kStateOk，否则在处理非法参数后返回kStateError </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>kStateOK</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功且参数合法 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kStateError</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功但参数非法 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="188" column="16" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="188" bodyend="192"/>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9" compoundref="controller__base_8hpp" startline="34">hello_world::algorithms::controller::kStateError</references>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53" compoundref="controller__base_8hpp" startline="33">hello_world::algorithms::controller::kStateOk</references>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ac93a2147653984691a43405c9ccca14b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199d" kindref="member">State</ref></type>
        <definition>State hello_world::algorithms::controller::pid::InteAntiWindup::setParams</definition>
        <argsstring>(bool is_enabled, float lower, float upper)</argsstring>
        <name>setParams</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::setParams</qualifiedname>
        <param>
          <type>bool</type>
          <declname>is_enabled</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>float</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
<para>设置积分抗饱和优化参数 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>是否启用积分抗饱和优化 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lower</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值下限 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper</parametername>
</parameternamelist>
<parameterdescription>
<para>触发积分抗饱和的积分输出值上限 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>设置状态，如果参数合法返回kStateOk，否则在处理非法参数后返回kStateError </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>kStateOK</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功且参数合法 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kStateError</parametername>
</parameternamelist>
<parameterdescription>
<para>设置成功但参数非法 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="203" column="16" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="203" bodyend="209"/>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199dab648f0f65a574817d57104ddd4c7b4a9" compoundref="controller__base_8hpp" startline="34">hello_world::algorithms::controller::kStateError</references>
        <references refid="namespacehello__world_1_1algorithms_1_1controller_1a3651797f880533c49c9b90a0961c199da55ce72715605bed221a607365a27be53" compoundref="controller__base_8hpp" startline="33">hello_world::algorithms::controller::kStateOk</references>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ad27d81071f442d261ef75f8633fc1b34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hello_world::algorithms::controller::pid::InteAntiWindup::isLegal</definition>
        <argsstring>()</argsstring>
        <name>isLegal</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::isLegal</qualifiedname>
        <briefdescription>
<para>检查积分抗饱和优化参数是否合法 判定条件为：lower&lt;=upper </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>参数合法返回true，否则返回false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="216" column="15" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a7f1d16186e9a57d867b26ef93874c508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hello_world::algorithms::controller::pid::InteAntiWindup::isEnabled</definition>
        <argsstring>()</argsstring>
        <name>isEnabled</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::isEnabled</qualifiedname>
        <briefdescription>
<para>检查是否启用了积分抗饱和优化 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>如果启用了积分抗饱和优化并且参数合法，则返回true，否则返回false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="222" column="15" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ae1314426af77e207b2a80bdd060b173f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float hello_world::algorithms::controller::pid::InteAntiWindup::calc</definition>
        <argsstring>(float err, float last_inte_out)</argsstring>
        <name>calc</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::calc</qualifiedname>
        <param>
          <type>float</type>
          <declname>err</declname>
        </param>
        <param>
          <type>float</type>
          <declname>last_inte_out</declname>
        </param>
        <briefdescription>
<para>计算积分抗饱和优化后的输出值 </para>
        </briefdescription>
        <detaileddescription>
<para>具体计算公式为：  <formula id="10">\[
\alpha=\begin{cases}
0 &amp;,&amp;isEnabled() \wedge  \left [ u(k-1)\cdot e(k)&gt;0 \vee  u(k-1)\notin \left [\epsilon_l ,\epsilon_u \right] \right ] \\
1 &amp;,&amp;others
\end{cases}
\]</formula>， 其中 <formula id="11">$\epsilon_l$</formula> 为参数中的下限值， <formula id="12">$\epsilon_u$</formula>为参数中的上限值。 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>本次采样的误差值 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_out</parametername>
</parameternamelist>
<parameterdescription>
<para>上次采样的输出值 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>本次采样的积分抗饱和优化后的输出值 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="238" column="16" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="238" bodyend="248"/>
        <referencedby refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_basic_pid_1a2b8667e517f1999ec3fecffe9e6bd33d" compoundref="pid_8cpp" startline="60" endline="137">hello_world::algorithms::controller::pid::BasicPid::calc</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a072df8cac095c2c4dd47ee0485f3ab70" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hello_world::algorithms::controller::pid::InteAntiWindup::handleIllegalParams</definition>
        <argsstring>()</argsstring>
        <name>handleIllegalParams</name>
        <qualifiedname>hello_world::algorithms::controller::pid::InteAntiWindup::handleIllegalParams</qualifiedname>
        <briefdescription>
<para>处理非法参数 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>如果存在非法参数返回true，否则返回false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="259" column="15" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="259" bodyend="269"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>积分抗饱和优化类 </para>
    </briefdescription>
    <detaileddescription>
<para>该类的作用是提供积分抗饱和优化的实现，以解决控制器输出由于积分作用导致的饱和现象，从而提高控制性能该类的主要功能包括： 计算抗积分饱和系数 alpha，根据是否启用该功能以及上一时刻的输出和当前时刻的误差值是否满足特定条件来决定 alpha 的值。</para>
<para>这个类提供了积分抗饱和优化的实现。 积分饱和现象指若系统存在一个方向的偏差，控制器输出由于积分作用的不断累加而持续增大，若超出执行机构正常运行范围便进入了饱和区。 一旦系统出现反向偏差，控制器输出逐渐从饱和区退出，进入饱和区越深则退出所需时间越长。 在这段时间内，执行机构仍停留在极限位置，而不能随偏差反向立即做出相应的改变，此时将造成控制性能恶化。 假设积分项表示为： <formula id="0">$u_i(k)=\sum_{j=0}^{k-1}K_ie(j)T+\alpha K_ie(k)T$</formula>。 抗积分饱和法在计算控制器输出 <formula id="1">$u(k)$</formula> 时，首先判断上一时刻 <formula id="2">$k-1$</formula> 的输出 <formula id="3">$u(k-1)$</formula> 是否已超出限制范围： 若 <formula id="3">$u(k-1)$</formula> 大于上限 <formula id="4">$u_{max}$</formula> ，则只累加负偏差；若 <formula id="3">$u(k-1)$</formula> 小于下限 <formula id="5">$u_{min}$</formula> ，则只累加正偏差。 其中 <formula id="6">$\alpha$</formula> 为抗积分饱和系数，可由该类计算得到。<itemizedlist>
<listitem><para>具体计算公式见<computeroutput><ref refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ae1314426af77e207b2a80bdd060b173f" kindref="member">calc(float err, float last_err)</ref></computeroutput>。</para>
</listitem><listitem><para>参数合法性检查见<computeroutput><ref refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ad27d81071f442d261ef75f8633fc1b34" kindref="member">isLegal()</ref></computeroutput>。</para>
</listitem><listitem><para>启用判定见<computeroutput><ref refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a7f1d16186e9a57d867b26ef93874c508" kindref="member">isEnabled()</ref></computeroutput>。 </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="HW-Components/algorithms/controller/inc/pid_opt.hpp" line="141" column="1" bodyfile="HW-Components/algorithms/controller/inc/pid_opt.hpp" bodystart="142" bodyend="270"/>
    <listofallmembers>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ae1314426af77e207b2a80bdd060b173f" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>calc</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a072df8cac095c2c4dd47ee0485f3ab70" prot="private" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>handleIllegalParams</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a8eb55119483f5d49173d2c77cdb9a556" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>InteAntiWindup</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a50a25dea16fff05f0d7f03cb02b2990b" prot="private" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>is_enabled_</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a7f1d16186e9a57d867b26ef93874c508" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>isEnabled</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ad27d81071f442d261ef75f8633fc1b34" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>isLegal</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a0db915fe3d477396d68fb0462fcf3a28" prot="private" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>lower_</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a926793e090a2c5c64c308216c3e6dc78" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>setEnabled</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ab1a3b82928ba4589ae7db1b9fe40cbd0" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>setLower</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1ac93a2147653984691a43405c9ccca14b" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>setParams</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a99aa5b1cebc90714af693d7e8d816ffa" prot="public" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>setUpper</name></member>
      <member refid="classhello__world_1_1algorithms_1_1controller_1_1pid_1_1_inte_anti_windup_1a15f1c738125bfca7994e2c9b304b61e8" prot="private" virt="non-virtual"><scope>hello_world::algorithms::controller::pid::InteAntiWindup</scope><name>upper_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
