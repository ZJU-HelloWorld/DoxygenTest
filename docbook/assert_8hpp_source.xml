<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_assert_8hpp_source" xml:lang="zh">
<title>assert.hpp</title>
<indexterm><primary>HW-Components/tools/inc/assert.hpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="_assert_8hpp_source_1l00001"/>00001 
<anchor xml:id="_assert_8hpp_source_1l00015"/>00015 <emphasis role="comment">/*&#32;Define&#32;to&#32;prevent&#32;recursive&#32;inclusion&#32;-------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00016"/>00016 <emphasis role="preprocessor">#ifndef&#32;HW_COMPONENTS_TOOLS_ASSERT_HPP_</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00017"/>00017 <emphasis role="preprocessor">#define&#32;HW_COMPONENTS_TOOLS_ASSERT_HPP_</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00018"/>00018 
<anchor xml:id="_assert_8hpp_source_1l00019"/>00019 <emphasis role="comment">/*&#32;Includes&#32;------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00020"/>00020 <emphasis role="comment">/*&#32;Exported&#32;macro&#32;------------------------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00021"/>00021 <emphasis role="preprocessor">#ifndef&#32;USE_CUSTOM_DEFINE_ASSERT</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00022"/><link linkend="_assert_8hpp_1ae4c11203ee79b13512356a202f825393">00022</link> <emphasis role="preprocessor">#define&#32;USE_CUSTOM_DEFINE_ASSERT&#32;0&#32;&#32;</emphasis><emphasis role="comment">//&lt;&#32;启用自定义&#32;assert</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00023"/>00023 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00024"/>00024 <emphasis role="preprocessor">#if&#32;USE_CUSTOM_DEFINE_ASSERT</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00032"/>00032 <emphasis role="preprocessor">#define&#32;HW_ASSERT(expr,&#32;format,&#32;...)&#32;\</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00033"/>00033 <emphasis role="preprocessor">&#32;&#32;((expr)&#32;?&#32;(void)0U&#32;:&#32;assert_failed((uint8_t*)__FILE__,&#32;__LINE__))</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;assert_failed(uint8_t*&#32;file,&#32;uint32_t&#32;line);
<anchor xml:id="_assert_8hpp_source_1l00035"/>00035 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00036"/><link linkend="_assert_8hpp_1a5969df827ceb603bed14c4106586484a">00036</link> <emphasis role="preprocessor">#define&#32;HW_ASSERT(expr,&#32;format,&#32;...)&#32;((void)0U)</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00037"/>00037 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00038"/>00038 <emphasis role="comment">/*&#32;Exported&#32;constants&#32;--------------------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00039"/>00039 <emphasis role="comment">/*&#32;Exported&#32;types&#32;------------------------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00040"/>00040 <emphasis role="comment">/*&#32;Exported&#32;variables&#32;--------------------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00041"/>00041 <emphasis role="comment">/*&#32;Exported&#32;function&#32;prototypes&#32;----------------------------------------------*/</emphasis>
<anchor xml:id="_assert_8hpp_source_1l00042"/>00042 
<anchor xml:id="_assert_8hpp_source_1l00043"/>00043 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;HW_COMPONENTS_TOOLS_ASSERT_HPP_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
